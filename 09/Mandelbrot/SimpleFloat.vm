function SimpleFloat.new 0
push constant 1
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push pointer 0
return
function SimpleFloat.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function SimpleFloat.getValue 0
push argument 0
pop pointer 0
push this 0
return
function SimpleFloat.add 1
push argument 0
pop pointer 0
push this 0
push argument 1
call SimpleFloat.getValue 1
add
pop local 0
push local 0
call SimpleFloat.new 1
return
function SimpleFloat.sub 1
push argument 0
pop pointer 0
push this 0
push argument 1
call SimpleFloat.getValue 1
sub
pop local 0
push local 0
call SimpleFloat.new 1
return
function SimpleFloat.mul 1
push argument 0
pop pointer 0
push this 0
push argument 1
call SimpleFloat.decode 1
call Math.multiply 2
pop local 0
push local 0
call SimpleFloat.new 1
return
function SimpleFloat.mulInt 1
push argument 0
call SimpleFloat.getValue 1
push argument 1
call Math.multiply 2
pop local 0
push local 0
call SimpleFloat.new 1
return
function SimpleFloat.divInt 1
push argument 0
call SimpleFloat.getValue 1
push argument 1
call Math.divide 2
pop local 0
push local 0
call SimpleFloat.new 1
return
function SimpleFloat.encode 2
push constant 0
pop local 1
push argument 0
pop local 0
label WHILE_EXP0
push local 1
push constant 8
lt
not
if-goto WHILE_END0
push local 0
push constant 2
call Math.multiply 2
pop local 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push local 0
call SimpleFloat.new 1
return
function SimpleFloat.decode 2
push constant 0
pop local 1
push argument 0
call SimpleFloat.getValue 1
pop local 0
label WHILE_EXP0
push local 1
push constant 8
lt
not
if-goto WHILE_END0
push local 0
push constant 2
call Math.divide 2
pop local 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push local 0
return
